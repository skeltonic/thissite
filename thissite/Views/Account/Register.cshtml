@model RegisterViewModel
@{
    ViewData["Title"] = "Register";
}
<div class="results titantext add-padd borders">
    <h2 class="header">Sign Up</h2>
</div>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <div asp-validation-summary="All"></div>
    </div>

}
<form method="post" asp-action="Register" asp-controller="Account">
    <div class="form-group">
        <label asp-for="UserName"></label>
        <input asp-for="UserName" class="@(ViewData.ModelState.ContainsKey("UserName") && ViewData.ModelState["UserName"].Errors.Any() ? "form-control is-invalid" : "form-control")" type="text" placeholder="Enter your Username" />
        @if (ViewData.ModelState.ContainsKey("UserName"))
        {
            foreach (var error in ViewData.ModelState["UserName"].Errors)
            {
                <div class="invalid-feedback">
                    @error.ErrorMessage
                </div>
            }
        }
    </div>
    <div class="form-group">
        <label asp-for="Password"></label>
        <input asp-for="Password" class="form-control" type="password" placeholder="Enter your Password" required />
    </div>
    <div class="form-group">
        <label asp-for="FirstName"></label>
        <input asp-for="FirstName" class="form-control" type="text" placeholder="Enter your first name" required />
    </div>
    <div class="form-group">
        <label asp-for="LastName"></label>
        <input asp-for="LastName" class="form-control" type="text" placeholder="Enter your last name" required />
    </div>
    <div class="form-group">
        <label asp-for="PhoneNumber"></label>
        <input asp-for="PhoneNumber" class="form-control" type="tel" placeholder="Enter your telephone number" required />
    </div>
    <div class="form-group">
        <label asp-for="Email"></label>
        <input asp-for="Email" class="form-control" type="email" placeholder="Enter your email" required />
    </div>
    <input type="submit" class="btn btn-primary" value="Sign Up" />
</form>
